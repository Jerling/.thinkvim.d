{
	// Place your snippets for makefile here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"project template" :{
		"prefix": "project_makefile",
		"body": [
			"######################################",
			"# Author: ${1:Jerling Li}",
			"# Email : ${2:linjieli001@qq.com}",
			"# Description: build project ",
			"######################################\n\n",
			"include color/color.make",
			"",
			"LIB_DIR\t\t:= lib",
			"SHARE_DIR\t:= share",
			"SAMPLE_DIR\t:= samples",
			"TEST_DIR\t:= tests",
			"",
			".PHONY : build build_sample build_test build_all run_sample run_test run_all clean dist-clean",
			"",
			"build :",
			"\t(cd $(LIB_DIR); make)",
			"\t(cd $(SHARE_DIR); make)",
			"",
			"build_sample:",
			"\t(cd $(SAMPLE_DIR); make)",
			"",
			"build_test:",
			"\t(cd $(TEST_DIR); make)",
			"",
			"run_test: build_all",
			"\t$(TEST_DIR)/test_$4",
			"",
			"build_all : build build_sample build_test",
			"",
			"clean:",
			"\t(cd $(LIB_DIR); make clean)",
			"\t(cd $(SHARE_DIR); make clean)",
			"\t(cd $(SAMPLE_DIR); make clean)",
			"\t(cd $(TEST_DIR); make clean)",
			"",
			"dist-clean: clean",
			"\t(cd $(LIB_DIR); make dist-clean)",
			"\t(cd $(SHARE_DIR); make dist-clean)",
			"\t(cd $(SAMPLE_DIR); make dist-clean)",
			"\t(cd $(TEST_DIR); make dist-clean)",
			""
		]
	},
	"execute template" :{
		"prefix": "execute_makefile",
		"body" :[
			"######################################",
			"# Author: ${1:Jerling Li}",
			"# Email : ${2:linjieli001@qq.com}",
			"# Description: build ${3:all} execute obj",
			"######################################\n\n",
			"include ../color/color.make",
			"",
			"#source file",
			"SOURCE  := $(wildcard *.c)",
			"OBJS    := $(patsubst %.c,%.o,$(SOURCE))",
			"EXES    := $(patsubst %.o,%,$(OBJS))",
			"",	
			"#target you can change test to what you want",
			"",
			"TARGET  := $3",
			"",
			"#compile and lib parameter",
			"CC      := gcc",
			"LDFLAGS :=",
			"DEFINES :=",
			"INCLUDE := -I${4:../}include",
			"LIBS    := -L$4lib -l$6",
			"CFLAGS  := -g -Wall -O3 $(DEFINES) $(INCLUDE)",
			"",	
			"%:%.o",
			"\t$(CC) -o $@ $^ $(CFLAGS) $(LIBS)",
			"",
			".PHONY : all objs clean dist-clean rebuild",
			"",
			"all : $(EXES)",
			"",	
			"objs : $(OBJS)",
			"",	
			"clean :",
			"\trm -fr $(OBJS)",
			"",
			"dist-clean : clean",
			"\trm -fr $(EXES)",
			"",
			"rebuild: veryclean everything",
			"",
		]
	},
	"static template" :{
		"prefix": "static_makefile",
		"body": [
			"######################################",
			"# Author: ${1:Jerling Li}",
			"# Email : ${2:linjieli001@qq.com}",
			"# Description: build $3 static library",
			"######################################\n\n",
			"include ../color/color.make",
			"",
			"TARGET\t\t:= lib$3.a",
			"#compile and lib parameter",
			"CC\t\t\t:= gcc",
			"AR\t\t\t:= ar",
			"RANLIB\t\t:= ranlib",
			"LIBS\t\t:=",
			"LDFLAGS\t\t:=",
			"DEFINES \t:=",
			"SRC_DIR\t\t:= ${4:../}src",
			"INCLUDE \t:= -I$4include",
			"CFLAGS\t\t:= -g -Wall -O3 $(DEFINES) $(INCLUDE)",
			"",
			"#source file",
			"SOURCE\t\t:= $(wildcard $(SRC_DIR)/*.c)",
			"OBJS    \t:= $(patsubst %.c,%.o,$(SOURCE))",
			"",
			".PHONY : all objs clean dist-clean rebuild\n",
			"all : $(TARGET)\n",
			"objs : $(OBJS)\n",
			"clean :",
			"\trm -fr $(OBJS)\n",
			"dist-clean : clean",
			"\trm -fr $(TARGET)",
			"",
			"$(TARGET) : $(OBJS)",
			"\t$(AR) cru $(TARGET) $(OBJS)",
			"\t$(RANLIB) $(TARGET)",
			"",
			"rebuild: dist-clean all\n",
			"",
		]
	},
	"share library": {
		"prefix": "share_library",
		"body": [
			"######################################",
			"# Author: ${1:Jerling Li}",
			"# Email : ${2:linjieli001@qq.com}",
			"# Description: build $3 share library",
			"######################################\n\n",
			"include ../color/color.make",
			"",
			"#target you can change test to what you want",
			"TARGET  := lib$3.so",
			
			"#compile and lib parameter",
			"CC\t\t\t:= gcc",
			"AR\t\t\t:= ar",
			"RANLIB\t\t:= ranlib",
			"LIBS\t\t:=",
			"LDFLAGS\t\t:=",
			"DEFINES \t:=",
			"SRC_DIR\t\t:= ${4:../}src",
			"INCLUDE \t:= -I$4include",
			"CFLAGS\t\t:= -g -Wall -O3 $(DEFINES) $(INCLUDE)",
			"SHARE\t\t:= -fPIC -shared -o",
			"SHARE_PATH\t:=/usr/lib",
			"",	
			"#i think you should do anything here",
			"",	
			"#source file",
			"SOURCE  := $(wildcard $(SRC_DIR)/*.c)",
			"OBJS    := $(patsubst %.c,%.o,$(SOURCE))",
			"",
			".PHONY : all objs clean dist-clean rebuild",
			"",
			"all : $(TARGET)",
			"",
			"objs : $(OBJS)",
			"",
			"clean :",
			"\trm -fr $(OBJS)",
			"",
			"dist-clean : clean",
			"\trm -fr $(TARGET)",
			"",
			"$(TARGET) : $(OBJS)",
			"\t$(CC) $(CXXFLAGS) $(SHARE) $@ $(OBJS) $(LDFLAGS) $(LIBS)",
			"\tsudo cp $(TARGET) $(SHARE_PATH)",
			"",
			"rebuild: dist-clean all",
			"",
		]
	},
	"define color": {
		"prefix": "color_makefile",
		"body": [
			"NONE\t\t:= \"\\033[m\"",
			"RED\t\t\t:= \"\\033[0;32;31m\"",
			"LIGHT_RED\t:= \"\\033[1;31m\"",
			"GREEN\t\t:= \"\\033[0;32;32m\"",
			"LIGHT_GREEN\t:= \"\\033[1;32m\"",
			"BLUE\t\t:= \"\\033[0;32;34m\"",
			"LIGHT_BLUE\t:= \"\\033[1;34m\"",
			"DARY_GRAY\t:= \"\\033[1;30m\"",
			"CYAN\t\t:= \"\\033[0;36m\"",
			"LIGHT_CYAN\t:= \"\\033[1;36m\"",
			"PURPLE\t\t:= \"\\033[0;35m\"",
			"LIGHT_PURPLE:= \"\\033[1;35m\"",
			"BROWN\t\t:= \"\\033[0;33m\"",
			"YELLOW\t\t:= \"\\033[1;33m\"",
			"LIGHT_GRAY\t:= \"\\033[0;37m\"",
			"WHITE\t\t:= \"\\033[1;37m\"",
		]
	},
	"test colcr": {
		"prefix": "test_color",
		"body": [
			"test_color:",
			"\t@echo $(NONE)\"NONE\"$(NONE)",
			"\t@echo $(RED)\"RED\"$(NONE)",
			"\t@echo $(LIGHT_RED)\"LIGHT_RED\"$(NONE)",
			"\t@echo $(GREEN)\"GREEN\"$(NONE)",
			"\t@echo $(LIGHT_GREEN)\"LIGHT_GREEN\"$(NONE)",
			"\t@echo $(BLUE)\"BLUE\"$(NONE)",
			"\t@echo $(LIGHT_BLUE)\"LIGHT_BLUE\"$(NONE)",
			"\t@echo $(DARY_GRAY)\"DARY_GRAY\"$(NONE)",
			"\t@echo $(CYAN)\"CYAN\"$(NONE)",
			"\t@echo $(LIGHT_CYAN)\"LIGHT_GRAY\"$(NONE)",
			"\t@echo $(PURPLE)\"PURPLE\"$(NONE)",
			"\t@echo $(LIGHT_PURPLE)\"LIGHT_PURPLE\"$(NONE)",
			"\t@echo $(BROWN)\"BROWN\"$(NONE)",
			"\t@echo $(YELLOW)\"YELLOW\"$(NONE)",
			"\t@echo $(LIGHT_GRAY)\"LIGHT_GRAY\"$(NONE)",
			"\t@echo $(WHITE)\"WHITE\"$(NONE)",
		]
	}
}